% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classification_models.R
\name{elnet_testfit}
\alias{elnet_testfit}
\title{Test the final elastic net model}
\usage{
elnet_testfit(
  train_set,
  test_set,
  disease,
  finalfit_res,
  exclude_cols = NULL,
  type = "lasso"
)
}
\arguments{
\item{train_set}{(tibble). Training set.}

\item{test_set}{(tibble). Testing set.}

\item{disease}{(character). Disease to predict.}

\item{finalfit_res}{(list). Results from elnet_finalfit().}

\item{exclude_cols}{(vector). Columns to exclude from the model. Default is NULL.}

\item{type}{(character). Type of regularization. Default is "lasso". Other options are "ridge" and "elnet".}
}
\value{
A list with two elements:
\itemize{
\item metrics (list). A list with 5 metrics:
\item accuracy (numeric). Accuracy of the model.
\item sensitivity (numeric). Sensitivity of the model.
\item specificity (numeric). Specificity of the model.
\item auc (numeric). AUC of the model.
\item conf_matrix (tibble). Confusion matrix of the model.
\item mixture (numeric). Mixture of lasso and ridge regularization.
}
}
\description{
This function tests the final elastic net model on the test set.
It calculates the accuracy, sensitivity, specificity, AUC, and confusion matrix.
}
\examples{
wide_data <- example_data |>
  dplyr::select(DAid, Assay, NPX) |>
  tidyr::pivot_wider(names_from = Assay, values_from = NPX)
join_data <- wide_data |>
  dplyr::left_join(example_metadata |> dplyr::select(DAid, Disease, Sex))
diseases <- unique(example_metadata$Disease)
data_split <- split_data(join_data)
train_list <- make_groups(data_split$train_set,
                          diseases,
                          only_female = c("BRC", "CVX", "ENDC", "OVC"),
                          only_male = "PRC")

test_list <- make_groups(data_split$test_set,
                         diseases,
                         only_female = c("BRC", "CVX", "ENDC", "OVC"),
                         only_male = "PRC")

hypopt_res <- elnet_hypopt(train_list,
                           test_list,
                           "AML",
                           type = "elnet",
                           cv_sets = 2,
                           grid_size = 1,
                           ncores = 1,
                           exclude_cols = "Sex")

finalfit_res <- elnet_finalfit(hypopt_res$train_set, hypopt_res$elnet_tune, hypopt_res$wf)

testfit_res <- elnet_testfit(hypopt_res$train_set,
                             hypopt_res$test_set,
                             "AML",
                             finalfit_res,
                             exclude_cols = "Sex")
}
