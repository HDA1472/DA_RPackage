% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classification_models.R
\name{plot_features_summary}
\alias{plot_features_summary}
\title{Plot features summary visualizations}
\usage{
plot_features_summary(
  ml_results,
  importance = 50,
  upset_top_features = FALSE,
  disease_palette = NULL,
  feature_type_palette = c(`all-features` = "pink", `top-features` = "darkblue")
)
}
\arguments{
\item{ml_results}{Results from \code{do_elnet()} or \code{do_rf()}.}

\item{importance}{Importance threshold for top features. Default is 50.}

\item{upset_top_features}{Whether to plot the upset plot for the top features. Default is FALSE.}

\item{disease_palette}{The color palette for the plot. If it is a character, it should be one of the palettes from \code{get_hpa_palettes()}. Default is NULL.}

\item{feature_type_palette}{The color palette for the plot. If it is a character, it should be one of the palettes from \code{get_hpa_palettes()}. Default is "all-features" = "pink" and "top-features" = "darkblue".}
}
\value{
A list with two elements:
\itemize{
\item features_barplot: Barplot of the number of proteins and top proteins for each disease.
\item upset_plot_features: Upset plot of the top or all proteins.
\item metrics_barplot: Barplot of the model metrics for each disease.
}
}
\description{
\code{plot_features_summary()} plots the number of proteins and the number of top
proteins for each disease in a barplot. It also plots the upset plot of the
top or all protein features, as well as a summary line plot of the model
performance metrics.
}
\examples{
# Run the elastic net model pipeline for 3 different cases
res_aml <- do_elnet(example_data,
                    example_metadata,
                    "AML",
                    c("BRC", "PRC"),
                    wide = FALSE,
                    only_female = "BRC",
                    only_male = "PRC",
                    cv_sets = 2,
                    grid_size = 1,
                    ncores = 1)

res_brc <- do_elnet(example_data,
                    example_metadata,
                    "BRC",
                    c("BRC", "AML"),
                    wide = FALSE,
                    only_female = "BRC",
                    only_male = "PRC",
                    cv_sets = 2,
                    grid_size = 1,
                    ncores = 1)
res_prc <- do_elnet(example_data,
                    example_metadata,
                    "PRC",
                    c("BRC", "AML"),
                    wide = FALSE,
                    only_female = "BRC",
                    only_male = "PRC",
                    cv_sets = 2,
                    grid_size = 1,
                    ncores = 1)

# Combine the results
res <- list("AML" = res_aml,
            "BRC" = res_brc,
            "PRC" = res_prc)

# Plot features summary visualizations
plot_features_summary(res)
}
